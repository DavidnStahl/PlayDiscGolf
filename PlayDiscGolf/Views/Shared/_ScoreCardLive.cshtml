@using PlayDiscGolf.ViewModels.ScoreCard

@model PlayDiscGolf.ViewModels.ScoreCard.ScoreCardGameOnViewModel

@{
    Layout = null;
    var meter = "m";
    var currentPage = 1;
    var numberofHoleslooped = 0;

}

<div class="container">
    <div class="card" style="width: 23rem;">
        
        <div class="card-body">
            <h5 class="card-title">Hole: @Model.Hole.HoleNumber</h5>
            <p class="card-text">Par: @Model.Hole.ParValue</p>
            <p class="card-text">Distance: @Model.Hole.Distance @meter</p>
            @foreach (var player in Model.ScoreCardViewModel.PlayerCards)
            {

        <div class="form-inline">
            @if (@player.TotalScore <= 0)
            {
                <label class="form-group" style="width:auto;">@player.UserName (@player.TotalScore)</label>
            }
            else
            {
                <label class="form-group" style="width:auto;">@player.UserName (+@player.TotalScore)</label>
            }

            @{
                var holeCard = (player.HoleCards as IEnumerable<HoleCardViewModel>
                ).FirstOrDefault(h => h.HoleNumber == Model.Hole.HoleNumber);
            }
            <div class="form-group float-right" style="width:auto;">

                <a type="button" id="@player.UserName" class="btn text-success form-group text-right" style="width:auto;margin-left:50px" asp-action="UpdateScoreCard" asp-controller="ScoreCard"
                   asp-route-scoreCardID="@Model.ScoreCardViewModel.ScoreCardID.ToString()" asp-route-holeNumber="@Model.Hole.HoleNumber.ToString()" asp-route-addOrRemove="Minus"
                   asp-route-userName="@player.UserName" data-ajax="true" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-update="#scoreCardLive">-</a>

                @if (holeCard.Score == 0)
                {
                    <label class="form-group text-right" style="width:auto;padding-left:15px;padding-right:15px">0</label>
                }
                else
                {
                    <label class="form-group text-right" style="width:auto;padding-left:15px;padding-right:15px">@holeCard.Score</label>
                }

                <a type="button" id="@player.PlayerCardID" class="btn text-success form-group text-right" style="width:auto;" asp-action="UpdateScoreCard" asp-controller="ScoreCard"
                   asp-route-scoreCardID="@Model.ScoreCardViewModel.ScoreCardID.ToString()" asp-route-holeNumber="@Model.Hole.HoleNumber.ToString()" asp-route-addOrRemove="Plus"
                   asp-route-userName="@player.UserName" data-ajax="true" data-ajax-method="Get" data-ajax-mode="replace" data-ajax-update="#scoreCardLive">+</a>
            </div>
        </div>
            }
        </div>
    </div>

    <nav aria-label="...">

        <ul class="pagination pagination-lg">
            @if (currentPage != 1)
            {


                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                numberofHoleslooped++;
            }
            @for (int i = currentPage; i < Model.ScoreCardViewModel.PlayerCards[0].HoleCards.Count + 1; i++)
            {
                numberofHoleslooped++;

                @if (Model.Hole.HoleNumber == i)
                {
                    <li class="page-item active">
                        <a class="page-link" href="#">@i <span class="sr-only">(current)</span></a>
                    </li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="#">@i</a></li>
                }



                if (numberofHoleslooped == 5)
                {
                    break;
                }

            }

            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>

</div>
